/**
 * <h1><b>Самостоятельная работа</b></h1>
 * <h2><b>Задание 1: Float</b></h2>
 * <p>
 *     Напишите программу, которая проверяет, является ли введенная текстовая строка
 *     числом с плавающей точкой ({@code float}). Программа пытается преобразовать
 *     введенную строку в число {@code float}, и если это успешно, она выводит
 *     полученное число.
 * </p>
 * <p>
 *     Если преобразование не удалось, программа выдаёт сообщение об ошибке:<br>
 *     {@code Your input is not a float number. Please, try again.}<br>
 *     и возвращает специальное значение {@code Float.NaN}, чтобы обозначить ошибку.
 * </p>
 * <br>
 * <br>
 * <h2><b>Задание 2: Деление элементов массива на число</b></h2>
 * <p>
 *     Напишите программу, которая вычисляет значение выражения<br>
 *     {@code intArray[8] / d}, где:<br>
 *     {@code intArray} - массив целых чисел;<br>
 *     {@code d} - делитель.
 * </p>
 *
 * <p>
 *     Программа проверяет, имеется ли в массиве {@code intArray} элемент с индексом
 *     {@code 8}, и если нет, выводит сообщение о невозможности выполнения операции.
 * </p>
 * <p>
 *     Также программа проверяет, равен ли делитель {@code d} нулю, и если да, выводит
 *     соответствующее сообщение.
 * </p>
 * <p>
 *     На входе:
 * </p>
 * <p>
 *     {@code int[] intArray = new int[] {1, 2, 3, 4, 5, 6, 7, 8, 9};}<br>
 *     {@code int d = 1}
 * </p>
 * <p>
 *     На выходе:
 * </p>
 * <p>
 *     {@code intArray[8] / d = 9 / 1 = 9.0}<br>
 *     {@code 9.0}
 * </p>
 * <p>
 *     После запуска программы, если не переданы аргументы командной строки, то
 *     {@code intArray} будет {@code {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}} и {@code d} будет
 *     равно {@code 0}. В этом случае результат выражения {@code intArray[8] / d}
 *     будет бесконечность (так как деление на {@code 0}).
 * </p>
 * <p>
 *     Таким образом, программа выведет сообщение:
 * </p>
 * <p>
 *     {@code It's not possible to evaluate the expression - intArray[8] / d as d = 0.}
 *     <br>
 *     {@code NaN}
 * </p>
 * <p>
 *     В случае, если аргументы командной строки переданы, программа преобразует их в
 *     массив {@code intArray} и {@code d} соответственно. Затем вызывается метод
 *     {@code expr}, и результат выводится на экран, например:
 * </p>
 * <p>
 *     {@code intArray[8] / d = 8 / 3 = 2.6666666666666665}<br>
 *     {@code 2.6666666666666665}
 * </p>
 * <p>
 *     Программа должна выдавать следующие ошибки:
 * </p>
 * <p>
 *     Если длина массива меньше {@code 9}:<br>
 *     {@code It's not possible to evaluate the expression - intArray[8] / d as there
 *     is no 8th element in the given array.}<br>
 *     В этом случае, если массив имеет меньше {@code 9} элементов, программа сообщает,
 *     что не удается вычислить выражение, так как в массиве нет 8-го элемента.
 * </p>
 * <p>
 *     Если {@code d} равно {@code 0}:<br>
 *     {@code It's not possible to evaluate the expression - intArray[8] / d as d = 0.}<br>
 *     Если {@code d} равно {@code 0}, программа сообщает, что не удается вычислить
 *     выражение, так как деление на {@code 0} невозможно.
 * </p>
 * <p>
 *     Если условия не выполняются и программа успешно вычисляет результат, то
 *     выводится сообщение:<br>
 *     {@code intArray[8] / d = {значение} / {значение} = {результат}}<br>
 *     Где {значение} заменяется на соответствующие значения.
 * </p>
 * <p>
 *     Примеры входных данных и соответствующих сообщений об ошибках:
 * </p>
 * <p>
 *     Входные аргументы:<br>
 *     {@code int[]{1, 2, 3}}<br>
 *     {@code It's not possible to evaluate the expression - intArray[8] / d as there
 *     is no 8th element in the given array.}
 * </p>
 * <p>
 *     Входные аргументы:<br>
 *     {@code int[] intArray = new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9}}<br>
 *     {@code int d = 0}<br>
 *     {@code It's not possible to evaluate the expression - intArray[8] / d as d = 0.}
 * </p>
 * <p>
 *     Входные аргументы:<br>
 *     {@code int[] intArray = new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9}}<br>
 *     {@code int d = 10}<br>
 *     {@code intArray[8] / d = 9 / 10 = 0.9}
 * </p>
 * <br>
 * <br>
 * <h2><b>Задание 3: Деление</b></h2>
 * <p>
 *     Напишите программу для выполнения арифметической операции деления двух целых
 *     чисел {@code a} и {@code b}.
 * </p>
 * <p>
 *     При этом программа должна проверить, что делитель {@code b} не равен нулю, и
 *     выполнить деление только в этом случае.
 * </p>
 * <p>
 *     Если {@code b} равен нулю, программа должна вывести сообщение о невозможности
 *     выполнения операции и вернуть результат равный нулю.
 * </p>
 * <p>
 *     После выполнения операции деления, программа также должна вывести сумму чисел
 *     {@code a} и {@code b} с помощью метода {@code printSum}.
 * </p>
 * <p>
 *     Если аргументы не переданы через командную строку, используйте значения по
 *     умолчанию.
 * </p>
 * <p>
 *     На входе:<br>
 *     {@code int a = 12}<br>
 *     {@code int b = 5}
 * </p>
 * <p>
 *     На выходе:<br>
 *     {@code 17}<br>
 *     {@code 2.4}
 * </p>
 * <br>
 * <br>
 * <h2><b>Задание 4: Символ `a`</b></h2>
 * <p>
 *     Напишите программу, которая принимает символ {@code a} в качестве аргумента и
 *     выполняет следующую проверку: если символ {@code a} равен пробелу {@code ' '},
 *     программа должна выбрасывать исключение с сообщением {@code "Пустая строка введена."}.
 * </p>
 * <p>
 *     В противном случае программа должна возвращать сообщение {@code "Ваш ввод -
 *     [символ]"}, где [символ] заменяется на введенный символ {@code a}.
 * </p>
 * <p>
 *     На входе:<br>
 *     {@code char a = '0'}
 * </p>
 * <p>
 *     На выходе:<br>
 *     {@code Result: Your input was - 0}
 * </p>
 */

public class Main {
    public static void main(String[] args) {
        Printer.task01();
        Printer.task02();
        Printer.task03();
        Printer.task04();
    }
}